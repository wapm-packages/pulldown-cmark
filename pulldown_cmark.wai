record error {
    message: string,
}

escape-href: func(s: string) -> expected<(),error>
escape-html: func(s: string) -> expected<(),error>

push-html: func(s: string, iter: parser)
write-html: func(s: string, iter: parser) -> expected<(),error>

variant cow-str {
    boxed(string),
    borrowed(string),
    inlined(string),
}

flags options {
    enable-tables,
    enable-footnotes,
    enable-strikethrough,
    enable-tasklists,
    enable-smart-punctuation,
    enable-heading-attributes,
}

variant alignment {
    none,
    left,
    center,
    right,
}

variant code-block-kind {
    indented,
    fenced(cow-str),
}

variant link-type {
    inline,
    reference,
    reference-unknown,
    collapsed,
    collapsed-unknown,
    shortcut,
    shortcut-unknown,
    autolink,
    email,
}

variant heading-level {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
}

variant tag {
    paragraph,
    heading(tuple<heading-level,option<string>,list<string>>),
    block-quote,
    code-block(code-block-kind),
    list(option<u64>),
    item,
    footnote-definition(cow-str),
    table(list<alignment>),
    table-head,
    table-row,
    table-cell,
    emphasis,
    strong,
    strike-through,
    link(tuple<link-type,cow-str,cow-str>),
    image(tuple<link-type,cow-str,cow-str>),
}

variant event {
    start(tag),
    end(tag),
    text(cow-str),
    code(cow-str),
    html(cow-str),
    footnote-reference(cow-str),
    soft-break,
    hard-break,
    rule,
    task-list-marker(bool)
}

record range-u32 {
    start: u32,
    end: u32,
}

record broken-link {
    span: range-u32,
    link-type: link-type,
    reference: cow-str,
}

record invalid-heading-level {
    message: string,
}

record link-def{
    dest: cow-str,
    title: option<cow-str>,
    span: range-u32,
}


record offset-iter {
    inner: parser
}



resource parser {
    static new: func(text: string) -> parser    
    static new-ext: func(text: string, options: options) -> parser
    static new-with-broken-link-callback: func(text: string, options: options, broken-link-callback) -> parser
    reference-definitions: func() -> ref-def
    into-offset-iter: func() -> offset-iter
}

